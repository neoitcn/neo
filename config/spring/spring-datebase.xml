<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- 引入我们的database.properties,hibernate.properties文件 -->
	<!--<bean id="property"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>&lt;!&ndash; classpath代表类路径,如src下面的文件 &ndash;&gt;
				<value>classpath:file.properties</value>&lt;!&ndash; classpath代表类路径,如src下面的文件 &ndash;&gt;
			</list>
		</property>
	</bean>-->

	<context:property-placeholder ignore-unresolvable="true" location="classpath:database.properties,classpath*:file.properties"/>

	<!-- 定义使用C3P0连接池的数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 指定连接数据库的JDBC驱动 -->
		<property name="driverClass">
			<value>${mysql.driver_class}</value>
		</property>
		<!-- 连接数据库所用的URL -->
		<property name="jdbcUrl">
			<value>${mysql.connection.url}</value>
		</property>
		<!-- 连接数据库的用户名 -->
		<property name="user">
			<value>${mysql.connection.username}</value>
		</property>
		<!-- 连接数据库的密码 -->
		<property name="password">
			<value>${mysql.connection.password}</value>
		</property>
		<!-- 设置数据库连接池的最大连接数 -->
		<property name="maxPoolSize">
			<value>30</value>
		</property>
		<!-- 设置数据库连接池的最小连接数 -->
		<property name="minPoolSize">
			<value>2</value>
		</property>
		<!-- 设置数据库连接池的初始化连接数 -->
		<property name="initialPoolSize">
			<value>2</value>
		</property>
		<!-- 设置数据库连接池的连接的最大空闲时间,单位为秒 -->
		<property name="maxIdleTime">
			<value>10</value>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="${file.max.size}" />
		<property name="maxInMemorySize" value="${file.buffer.size}" />
		<property name="defaultEncoding" value="${file.defaultEncoding}"></property>
	</bean>

	<!-- 启用自动扫描 -->
	<context:component-scan base-package="com.neo.*">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" /><!-- 排除注解为controller的类型 -->
	</context:component-scan>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- MyBatis begin -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.neo" />
		<property name="typeAliasesSuperType" value="com.neo.sys.entity.BaseBean" />
		<property name="mapperLocations" value="classpath:/mapper/**/*.xml" />
		<property name="configLocation" value="classpath:/mybatis.xml"></property>
	</bean>

	<!-- 扫描basePackage下所有以@MyBatisDao注解的接口 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.neo" />
		<property name="annotationClass" value="com.neo.sys.annotation.MyBatisDao" />
	</bean>
	<!-- 开启 mybatis事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Spring Redis配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}"></property>
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}"></property>
		<property name="testOnBorrow" value="${redis.testOnBorrow}"></property>
		<property name="maxTotal" value="${redis.maxTotal}"></property>
	</bean>
	<bean id="connectFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="poolConfig" ref="jedisPoolConfig"></property>
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectFactory"></property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

</beans>
