<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aofa.sifa.mapper.diary.NoticeDao">
	
	<sql id="noticeColumns">
		n.id,
		n.company_name,
		n.content,
		n.state,
		n.creater_id,
		n.create_time,
		n.update_id,
		n.update_time,
		n.deleted,
		n.input_time
	</sql>
	<sql id="noticeColumns2">
		id,
		company_name,
		content,
		state,
		creater_id,
		create_time,
		update_id,
		update_time,
		deleted,
		input_time
	</sql>

	<resultMap type="Notice" id="notice" extends="baseBean">
		<id column="id" property="id"/>
		<result column="company_name" property="companyName"/>
		<result column="content" property="content"/>
		<result column="state" property="state"/>
		<result column="input_time" property="inputTime"/>
	</resultMap>
	<resultMap type="BaseBean" id="baseBean">
		<result column="creater_id" property="createrId"/>
		<result column="create_time" property="createTime"/>
		<result column="update_id" property="updateId"/>
		<result column="update_time" property="updateTime"/>
		<!--<result column="input_time" property="inputTime"/> -->
		<result property="deleted" column="deleted" />
		<!-- <result property="enabled" column="enabled" /> -->
	</resultMap>
    
    <select id="getNotices" resultMap="notice">
    	select 
    		<include refid="noticeColumns"></include>
    	from dm_notice n
    	where n.deleted=1
    	<if test="companyName !=null and companyName !=''">
    		and n.company_name like concat('%',#{companyName},'%')
    	</if>
    	<if test="state !=null">
    		and n.state = #{state}
    	</if>
    	order by n.create_time desc
    	<if test="rows > 0">
			limit #{start},#{rows}
		</if>
    </select>
      <select id="getCount" resultType="java.lang.Long">
    	select 
    		count(id)
    	from dm_notice n
    	where n.deleted=1
    	<if test="companyName!=null and companyName!=''">
    		and n.company_name like concat('%',#{companyName},'%')
    	</if>
    </select>
    <select id="getNoticeById" resultMap="notice">
    	select 
    		<include refid="noticeColumns"></include>
    	from dm_notice n
    	where n.deleted=1 and n.id=#{id}
    </select>
    <insert id="addNotice">
    	insert into dm_notice (
    		<include refid="noticeColumns2"></include>
    	)values(
	    	#{id},
			#{companyName},
			#{content},
			#{state},
			#{createrId},
			#{createTime},
			#{updateId},
			#{updateTime},
			#{deleted},
			#{inputTime}
    	)
    </insert>
    <update id="updateNotice">
    	update dm_notice set
			company_name=#{companyName},
			content=#{content},
			state=#{state},
			update_id=#{updateId},
			update_time=#{updateTime},
			deleted=#{deleted},
			input_time=#{inputTime}
		where id=#{id}
    </update>
    <update id="deleteNotice">
    	update dm_notice set deleted=0 where id=#{id}
    </update>
    <update id="publicshNotice">
    	update dm_notice set state=2 where id in 
    		<foreach collection="array" item="id" open="(" separator="," close=")">
    			#{id}
    		</foreach>
    </update>
</mapper>