<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aofa.sifa.mapper.supervision.TalkRecordDao">
	<sql id="talkRecordColumns">
		tr.id, tr.name, tr.phone, tr.talk_time, tr.talk_person, tr.record_person,
		tr.talk_position, tr.talk_content,
		tr.talk_state, tr.creater_id, tr.create_time, tr.update_id, tr.update_time,
		tr.deleted,
		tr.office_id,tr.office_name
	</sql>
	<sql id="talkRecordColumns2">
		id, name, phone, talk_time, talk_person, record_person, talk_position,
		talk_content,
		talk_state, creater_id, create_time, update_id, update_time, deleted,office_id,office_name
	</sql>
	<resultMap type="BaseBean" id="baseBean">
		<result column="creater_id" property="createrId" />
		<result column="create_time" property="createTime" />
		<result column="update_id" property="updateId" />
		<result column="update_time" property="updateTime" />
		<result property="deleted" column="deleted" />
		<result property="enabled" column="enabled" />
	</resultMap>
	<resultMap id="talkRecordMap" type="TalkRecord">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="talk_time" jdbcType="TIMESTAMP" property="talkTime" />
		<result column="talk_person" jdbcType="VARCHAR" property="talkPerson" />
		<result column="record_person" jdbcType="VARCHAR" property="recordPerson" />
		<result column="talk_position" jdbcType="VARCHAR" property="talkPosition" />
		<result column="talk_content" jdbcType="VARCHAR" property="talkContent" />
		<result column="talk_state" jdbcType="INTEGER" property="talkState" />
		<result column="office_id" jdbcType="INTEGER" property="officeId" />
		<result column="office_name" jdbcType="VARCHAR" property="officeName" />
	</resultMap>
	<select id="getTalkRecords" resultMap="talkRecordMap">
		select
			<include refid="talkRecordColumns" />
		from mn_talk_record tr where tr.deleted=1
		<if test="name != null and name != ''">
			and tr.name like concat('%',#{name},'%')
		</if>
		<if test="admin == null or admin != 1">
		<choose>
			<when test="offices == null or offices.size() == 0">
				and 1=2
			</when>
			<otherwise>
				and tr.office_id in
				<foreach collection="offices" open="(" close=")" item="office" separator=",">
					#{office.id}
				</foreach>
			</otherwise>
		</choose>
  	</if>
		<if test="rows > 0">
			limit #{start},#{rows}
		</if>
	</select>
	<select id="getCount" resultType="java.lang.Long">
		select
			count(id)
		from mn_talk_record tr where tr.deleted=1
		<if test="name != null and name != ''">
			and tr.name like concat('%',#{name},'%')
		</if>
		<if test="admin == null or admin != 1">
		<choose>
			<when test="offices == null or offices.size() == 0">
				and 1=2
			</when>
			<otherwise>
				and tr.office_id in
				<foreach collection="offices" open="(" close=")" item="office" separator=",">
					#{office.id}
				</foreach>
			</otherwise>
		</choose>
  	</if>
	</select>
	<select id="getTalkRecordById" resultMap="talkRecordMap">
		select
			<include refid="talkRecordColumns" />
		from mn_talk_record tr where tr.deleted=1 and tr.id=#{id}
	</select>
	<insert id="addTalkRecord">
		insert into mn_talk_record (
			<include refid="talkRecordColumns2" />
		)
		values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{talkTime,jdbcType=TIMESTAMP}, #{talkPerson,jdbcType=VARCHAR}, #{recordPerson,jdbcType=VARCHAR},
		#{talkPosition,jdbcType=VARCHAR}, #{talkContent,jdbcType=VARCHAR},
		#{talkState,jdbcType=INTEGER},
		#{createrId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER},
		 #{officeId,jdbcType=INTEGER}, #{officeName,jdbcType=VARCHAR})
	</insert>
	<update id="updateTalkRecord">
		update mn_talk_record
		set name = #{name,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		talk_time = #{talkTime,jdbcType=TIMESTAMP},
		talk_person = #{talkPerson,jdbcType=VARCHAR},
		record_person = #{recordPerson,jdbcType=VARCHAR},
		talk_position = #{talkPosition,jdbcType=VARCHAR},
		talk_content = #{talkContent,jdbcType=VARCHAR},
		talk_state = #{talkState,jdbcType=INTEGER},
		update_id = #{updateId,jdbcType=VARCHAR},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		deleted = #{deleted,jdbcType=INTEGER},
		  office_id=#{officeId,jdbcType=INTEGER},
	      office_name=#{officeName,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="abandonTalkRecord">
		update mn_talk_record set talk_state=0 where id=#{id}
	</update>
	<update id="deletedTalkRecord">
		update mn_talk_record set deleted=0 where id=#{id}
	</update>
</mapper>