<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aofa.sifa.mapper.sys.WorkBaseDao">
 <sql id="workBaseColumns">
    wb.id, wb.base_name, wb.leader, wb.input_time,wb.base_position, wb.base_type, wb.base_state,wb.remarks, wb.creater_id, wb.create_time, 
    wb.update_id, wb.update_time, wb.deleted
  </sql>
 <sql id="workBaseColumns2">
    id, base_name, leader, input_time, base_position , base_type, base_state, remarks,creater_id, create_time, 
    update_id, update_time, deleted
  </sql>
  <resultMap type="BaseBean" id="baseBean">
		<result column="creater_id" property="createrId"/>
		<result column="create_time" property="createTime"/>
		<result column="update_id" property="updateId"/>
		<result column="update_time" property="updateTime"/>
		<result property="deleted" column="deleted" />
		<result property="enabled" column="enabled" />
	</resultMap>
  <resultMap id="workBaseMap" type="WorkBase">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="base_name" jdbcType="VARCHAR" property="baseName" />
    <result column="leader" jdbcType="VARCHAR" property="leader" />
    <result column="input_time" jdbcType="TIMESTAMP" property="inputTime" />
    <result column="base_position" jdbcType="VARCHAR" property="basePosition" />
    <result column="base_type" jdbcType="VARCHAR" property="baseType" />
    <result column="base_state" jdbcType="INTEGER" property="baseState" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  
  <select id="getWorkBases" resultMap="workBaseMap">
  	select 
  		<include refid="workBaseColumns"></include>
  	from sys_work_base wb where deleted=1
  	<if test="baseName != null">
  		and wb.base_name like concat('%',#{baseName},'%')
  	</if>
  	<if test="rows > 0">
  		limit #{start},#{rows}
  	</if>
  </select>
  <select id="getCount" resultType="java.lang.Long">
  	select 
  		<include refid="workBaseColumns"></include>
  	from sys_work_base wb where wb.deleted=1
  	<if test="baseName != null">
  		and wb.base_name like concat('%',#{baseName},'%')
  	</if>
  </select>
  <select id="getWorkBaseById" resultMap="workBaseMap">
  	select 
  		<include refid="workBaseColumns"></include>
  	from sys_work_base wb where wb.deleted=1 and wb.id=#{id}
  </select>
  
  <insert id="addWorkBase">
    insert into sys_work_base (
    	<include refid="workBaseColumns2"></include>
    )
    values (#{id,jdbcType=VARCHAR}, #{baseName,jdbcType=VARCHAR}, #{leader,jdbcType=VARCHAR}, 
      #{inputTime,jdbcType=TIMESTAMP}, #{basePosition,jdbcType=VARCHAR},#{baseType,jdbcType=VARCHAR}, #{baseState,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR},
      #{createrId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER})
  </insert>
  <update id="updateWorkBase">
    update sys_work_base
    set
      base_name = #{baseName,jdbcType=VARCHAR},
      leader = #{leader,jdbcType=VARCHAR},
      input_time = #{inputTime,jdbcType=TIMESTAMP},
      base_position = #{basePosition,jdbcType=VARCHAR},
      base_type = #{baseType,jdbcType=VARCHAR},
      base_state = #{baseState,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
     where id = #{id,jdbcType=VARCHAR}
  </update>
 	<update id="deleteWorkBase">
 		update sys_work_base set deleted=0 where id=#{id}
 	</update>
</mapper>