<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aofa.sifa.mapper.sk.SmuPinPulseDao">
  <resultMap type="Office" id="officeMap">
    <id column="office_id" property="id" />
    <result column="parent_id" property="parentId" />
    <result column="office_name" property="name" />
  </resultMap>
  <resultMap type="Drugster" id="drugster">
    <result column="name" property="name"/>
    <result column="phone" property="phone"/>
  </resultMap>
  <resultMap id="SmuPinPulseMap" type="SmuPinPulse">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="imei" jdbcType="VARCHAR" property="imei" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="pulse" jdbcType="INTEGER" property="pulse" />
    <result column="setp" jdbcType="INTEGER" property="setp" />
    <association property="office" column="office_id"
                 resultMap="officeMap"></association>
    <association property="drugster" column="imei"
                 resultMap="drugster"></association>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, imei, pid, time, pulse, setp
  </sql>
  <sql id="smupinpulseColumn_List">
    a.id, a.imei, a.pid, a.time, a.pulse, a.setp
  </sql>
  <sql id="drugsterColumns">
    b.name,
    b.phone
  </sql>
  <sql id="officeColumns">
    c.id as office_id,
    c.parent_id,
    c.name as office_name
  </sql>

  <select id="getSmuPinPulselist" resultMap="SmuPinPulseMap">
         select
            <include refid="smupinpulseColumn_List" />,<include refid="officeColumns" />,<include refid="drugsterColumns" />
         from smu_pin_pulse a INNER JOIN fm_drugster b ON a.`imei`=b.`imei`
    INNER JOIN sys_office c ON c.id=b.`office_id` AND c.`deleted`=1 AND b.`deleted`=1
    <if test="name!=null and name!=''">
          and  b.name like concat('%',#{name},'%')
    </if>
      <if test="imei!=null and imei!=''">
          and  a.imei like concat('%',#{imei},'%')
      </if>
      <if test="starttime!=null and starttime!=''">
          and  time <![CDATA[>=]]> #{starttime}
      </if>
      <if test="endtime!=null and endtime!=''">
          and  time  <![CDATA[<=]]> #{endtime}
      </if>
      <choose>
          <when test="admin == null or admin != '1'">
              <if test="offices!=null and offices.size()>0 ">
                  and b.office_id in
                  <foreach collection="offices"  open="(" close=")"  separator="," item="office">
                      #{office.id}
                  </foreach>
              </if>
          </when>
          <otherwise>
              and 1=2
          </otherwise>
      </choose>
    ORDER BY TIME DESC
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="getSmuPinPulsebyParam" resultMap="SmuPinPulseMap">
    select
    <include refid="smupinpulseColumn_List" />,<include refid="officeColumns" />,<include refid="drugsterColumns" />
    FROM smu_pin_pulse smout,(SELECT sm.id,sm.pid,sm.time,sm.imei,sm.pulse, sm.setp ,MAX(sm.time) AS maxTime
    FROM smu_pin_pulse sm
    GROUP BY sm.imei) a INNER JOIN fm_drugster b ON a.imei=b.imei
    INNER JOIN sys_office c
    ON b.office_id=c.id
    WHERE a.maxTime = smout.time AND a.imei = smout.imei
      <if test="name!=null and name!=''">
          and  b.name like concat('%',#{name},'%')
      </if>
    <choose>
      <when test="admin == null or admin != '1'">
        <if test="offices!=null and offices.size()>0 ">
          and b.office_id in
          <foreach collection="offices"  open="(" close=")"  separator="," item="office">
            #{office.id}
          </foreach>
        </if>
      </when>
      <otherwise>
        and 1=2
      </otherwise>
    </choose>
    GROUP BY smout.imei
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.aofa.sifa.entity.sk.SmuPinPulseExample" resultMap="SmuPinPulseMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from smu_pin_pulse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="SmuPinPulseMap">
    select 
    <include refid="Base_Column_List" />
    from smu_pin_pulse
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from smu_pin_pulse
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.aofa.sifa.entity.sk.SmuPinPulseExample">
    delete from smu_pin_pulse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aofa.sifa.entity.sk.SmuPinPulse">
    insert into smu_pin_pulse (id, imei, pid, 
      time, pulse, setp
      )
    values (#{id,jdbcType=VARCHAR}, #{imei,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{pulse,jdbcType=INTEGER}, #{setp,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aofa.sifa.entity.sk.SmuPinPulse">
    insert into smu_pin_pulse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="imei != null">
        imei,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="pulse != null">
        pulse,
      </if>
      <if test="setp != null">
        setp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="imei != null">
        #{imei,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="pulse != null">
        #{pulse,jdbcType=INTEGER},
      </if>
      <if test="setp != null">
        #{setp,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aofa.sifa.entity.sk.SmuPinPulseExample" resultType="java.lang.Long">
    select count(*) from smu_pin_pulse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update smu_pin_pulse
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.imei != null">
        imei = #{record.imei,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pulse != null">
        pulse = #{record.pulse,jdbcType=INTEGER},
      </if>
      <if test="record.setp != null">
        setp = #{record.setp,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update smu_pin_pulse
    set id = #{record.id,jdbcType=VARCHAR},
      imei = #{record.imei,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      pulse = #{record.pulse,jdbcType=INTEGER},
      setp = #{record.setp,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aofa.sifa.entity.sk.SmuPinPulse">
    update smu_pin_pulse
    <set>
      <if test="imei != null">
        imei = #{imei,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="pulse != null">
        pulse = #{pulse,jdbcType=INTEGER},
      </if>
      <if test="setp != null">
        setp = #{setp,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aofa.sifa.entity.sk.SmuPinPulse">
    update smu_pin_pulse
    set imei = #{imei,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      pulse = #{pulse,jdbcType=INTEGER},
      setp = #{setp,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>