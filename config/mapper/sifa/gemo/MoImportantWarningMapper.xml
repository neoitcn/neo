<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aofa.sifa.mapper.gemo.MoImportantWarningMapper">
  <resultMap id="ImportantAreaWarningResultMap" type="com.aofa.sifa.entity.gemo.MoImportantWarning">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="polygongeo" jdbcType="OTHER" property="polygongeo" />
  </resultMap>
    <resultMap id="ImportantAreaWarningResultMapForGet" type="com.aofa.sifa.entity.gemo.MoImportantWarningForGet">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="polygongeo" jdbcType="LONGVARCHAR" property="polygongeo" />
  </resultMap>
    	<sql id="ImportantAreaWarningColumns">
		id,name,polygongeo
	</sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, polygongeo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ImportantAreaWarningResultMap">
    select 
    <include refid="Base_Column_List" />
    from mo_important_warning
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mo_important_warning
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    	<select id="getImportantAreas" resultMap="ImportantAreaWarningResultMap">
		select <include refid="ImportantAreaWarningColumns"></include> 
      
		from mo_important_warning where name != ""
	</select>
	  	<select id="getImportantAreaById" resultMap="ImportantAreaWarningResultMap">
		select <include refid="ImportantAreaWarningColumns"></include> id, name, AsText(polygongeo) as polygongeo
		from mo_important_warning where id = #{id}
	</select>
    <delete id="deleteImportantArea" >
    delete from mo_important_warning where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.aofa.sifa.entity.gemo.MoImportantWarning">
    insert into mo_important_warning (id, name, polygongeo
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{polygongeo,jdbcType=OTHER}
      )
  </insert>
      <insert id="addImportantArea">
    insert into mo_important_warning(id, name, polygongeo
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, POLYGONFROMTEXT(#{polygongeo,jdbcType=OTHER})
      )
  </insert>
    <select id="selectWarmingMessage" resultMap="ImportantAreaWarningResultMap">
    select name,polygongeo
    from mo_important_warning 
    where MBRWithin(POLYGONFROMTEXT(#{POINTS,jdbcType=VARCHAR}),polygongeo);
  </select>
      <select id="selectWarmingMessageForGet" resultMap="ImportantAreaWarningResultMapForGet">
    select name,AsText(polygongeo) as polygongeo
    from mo_important_warning 
    where MBRWithin(POLYGONFROMTEXT(#{POINTS,jdbcType=VARCHAR}),polygongeo);
  </select>
        <select id="selectWarmingMessageForGetSingle" resultMap="ImportantAreaWarningResultMapForGet">
    select name,AsText(polygongeo) as polygongeo
    from mo_important_warning 
    where MBRWithin(POLYGONFROMTEXT(#{POINTS,jdbcType=VARCHAR}),polygongeo) and id = #{ID,jdbcType=VARCHAR};
  </select>
      	<select id="getImportantAreasForGet" resultMap="ImportantAreaWarningResultMapForGet">
		select id,name,AsText(polygongeo) as polygongeo
      
		from mo_important_warning where name != ""
	</select>
  <insert id="insertSelective" parameterType="com.aofa.sifa.entity.gemo.MoImportantWarning">
    insert into mo_important_warning
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="polygongeo != null">
        polygongeo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="polygongeo != null">
        #{polygongeo,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update mo_important_warning
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.polygongeo != null">
        polygongeo = #{record.polygongeo,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mo_important_warning
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      polygongeo = #{record.polygongeo,jdbcType=OTHER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aofa.sifa.entity.gemo.MoImportantWarning">
    update mo_important_warning
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="polygongeo != null">
        polygongeo = #{polygongeo,jdbcType=OTHER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aofa.sifa.entity.gemo.MoImportantWarning">
    update mo_important_warning
    set name = #{name,jdbcType=VARCHAR},
      polygongeo = #{polygongeo,jdbcType=OTHER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>