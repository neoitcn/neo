<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aofa.sifa.mapper.gemo.HistoryInfoDao">
 <sql id="historyInfoColumns">
    h.ID,h.id_card, h.SJH, h.NAME, h.ADDRESS, h.STATE, h.XML_INFO, h.POSTTIME, h.USERNAME, h.ISGET, h.QYBS, h.DEVICENO,
    h.SPEED, h.DIRECT, h.POSTAREA, h.ISTEMP, h.DELETED, h.VARYLON, h.VARYLAT, h.JZJGBM, h.DWTYPE,h.POINT, h.GEOM,h.IS_HANDLE,h.REMARKS,office_id
  </sql>
 <sql id="historyInfoColumns2">
    ID,id_card, SJH, NAME, ADDRESS, STATE, XML_INFO, POSTTIME, USERNAME, ISGET, QYBS, DEVICENO, 
    SPEED, DIRECT, POSTAREA, ISTEMP, DELETED, VARYLON, VARYLAT, JZJGBM, DWTYPE,POINT, GEOM ,IS_HANDLE,REMARKS,office_id
  </sql>
  <resultMap id="historyInfoMap" type="HistoryInfo">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="SJH" jdbcType="VARCHAR" property="sjh" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="STATE" jdbcType="VARCHAR" property="state" />
    <result column="XML_INFO" jdbcType="VARCHAR" property="xmlInfo" />
    <result column="POSTTIME" jdbcType="TIMESTAMP" property="posttime" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ISGET" jdbcType="BIT" property="isget" />
    <result column="QYBS" jdbcType="VARCHAR" property="qybs" />
    <result column="DEVICENO" jdbcType="VARCHAR" property="deviceno" />
    <result column="SPEED" jdbcType="VARCHAR" property="speed" />
    <result column="DIRECT" jdbcType="VARCHAR" property="direct" />
    <result column="POSTAREA" jdbcType="VARCHAR" property="postarea" />
    <result column="ISTEMP" jdbcType="BIT" property="istemp" />
    <result column="DELETED" jdbcType="INTEGER" property="deleted" />
    <result column="VARYLON" jdbcType="VARCHAR" property="varylon" />
    <result column="VARYLAT" jdbcType="VARCHAR" property="varylat" />
    <result column="JZJGBM" jdbcType="VARCHAR" property="jzjgbm" />
    <result column="DWTYPE" jdbcType="VARCHAR" property="dwtype" />
    <result column="POINT" jdbcType="BINARY" property="point" />
    <result column="GEOM" jdbcType="BINARY" property="geom" />
    <result column="IS_HANDLE" jdbcType="INTEGER" property="isHandle" />
    <result column="REMARKS" jdbcType="VARCHAR" property="remarks" />
	<result column="office_id" property="officeId"/>
  </resultMap>
  <select id="getCount" resultType="java.lang.Long">
  	select count(id) from mo_history_info h
  	where h.DELETED = '1'
  
   	<if test="name!=null and name!=''">
			 and (h.NAME like concat('%',#{name},'%') or h.SJH = #{name})			 
	</if>
  	<if test="idCard != null and idCard != ''">
  		and h.id_card = #{idCard}
  	</if>
  	<if test="state!=null and state!=''">
  		and h.STATE = #{state}
  	</if>
  	<if test="startTime != null">
  		and h.POSTTIME <![CDATA[>=]]> #{startTime}
  	</if>
  	<if test="endTime != null">
  		and h.POSTTIME <![CDATA[<=]]> #{endTime}
  	</if>
  	<if test="isHandle!=null">
  		and h.IS_HANDLE = #{isHandle}
  	</if>
  	<if test="admin == null or admin != 1">
  		and h.id_card in 
	  	<foreach collection="ids" open="(" close=")" item="id" separator=",">
	  		#{id}
	  	</foreach>
  	</if>
  	<if test="varyLat!=null and varyLat!='' and varyLon!=null and varyLon!='' and buffer!=null and buffer!=''">
  		and h.VARYLON+h.VARYLAT in (select h.VARYLON+h.VARYLAT from mo_history_info where sqrt(  
		    (  
		     ((#{varyLon}-h.VARYLON)*PI()*12656*COS(((#{varyLat}+h.VARYLAT)/2)*PI()/180)/180)  
		     *  
		     ((#{varyLon}-h.VARYLON)*PI()*12656*COS(((#{varyLat}+h.VARYLAT)/2)*PI()/180)/180)  
		    )  
		    +  
		    (  
		     ((#{varyLat}-h.VARYLAT)*PI()*12656/180)  
		     *  
		     ((#{varyLat}-h.VARYLAT)*PI()*12656/180)  
		    )  
		)<![CDATA[<]]>#{buffer})
  	</if>
  </select>
  <select id="getHistoryInfos" resultMap="historyInfoMap">
  	select <include refid="historyInfoColumns" />
  	<if test="needOfficeName == 'true'">
  		,o.name as officeName
  	</if>
  	from mo_history_info h
  	<if test="needOfficeName == 'true'">
  		left join sys_office o on h.office_id = o.id and o.deleted = 1
  	</if>
  	where h.DELETED = '1'
  	<if test="name!=null and name!=''">
			 and (h.NAME like concat('%',#{name},'%') or h.SJH = #{name}) 			
   </if>
	<if test="phone!=null and phone!=''">
		and h.sjh like concat('%',#{phone},'%')
	</if>
  	<if test="idCard != null and idCard != ''">
  		and h.id_card = #{idCard}
  	</if>
  	<if test="startTime != null">
  		and h.POSTTIME <![CDATA[>=]]> #{startTime}
  	</if>
  	<if test="endTime != null">
  		and h.POSTTIME <![CDATA[<=]]> #{endTime}
  	</if>
  	<if test="state!=null and state!=''">
  		and h.STATE = #{state}
  	</if>
  	<if test="isHandle!=null">
  		and h.IS_HANDLE = #{isHandle}
  	</if>
  	<if test="admin == null or admin != 1">
		<choose>
			<when test="offices == null or offices.size() == 0">
				and 1=2
			</when>
			<otherwise>
				and h.office_id in
				<foreach collection="offices" open="(" close=")" item="office" separator=",">
					#{office.id}
				</foreach>
			</otherwise>
		</choose>
  	</if>
  		<if test="varyLat!=null and varyLat!='' and varyLon!=null and varyLon!='' and buffer!=null and buffer!=''">
  		and h.VARYLON+h.VARYLAT in (select h.VARYLON+h.VARYLAT from mo_history_info where sqrt(  
		    (  
		     ((#{varyLon}-h.VARYLON)*PI()*12656*COS(((#{varyLat}+h.VARYLAT)/2)*PI()/180)/180)  
		     *  
		     ((#{varyLon}-h.VARYLON)*PI()*12656*COS(((#{varyLat}+h.VARYLAT)/2)*PI()/180)/180)  
		    )  
		    +  
		    (  
		     ((#{varyLat}-h.VARYLAT)*PI()*12656/180)  
		     *  
		     ((#{varyLat}-h.VARYLAT)*PI()*12656/180)  
		    )  
		)<![CDATA[<]]>#{buffer})
  	</if>
  	order by h.POSTTIME DESC
  </select>
  
  
    <!-- 时空分析 -->
  <select id="getHistoryInfobysk" resultMap="historyInfoMap"><!-- 查询出指定时间段内定位最早的那条数据,并统计该手机在该时间段内定位次数 -->
    SELECT  <include refid="historyInfoColumns"></include>,COUNT(sjh) AS phoneCount 
    FROM mo_history_info h
    WHERE  POSTTIME  BETWEEN #{startTime} AND #{endTime} AND state=1 
    AND posttime= (SELECT MIN(posttime) FROM  mo_history_info b
    WHERE  POSTTIME  BETWEEN #{startTime} AND #{endTime} AND state=1 
    AND h.posttime=b.POSTTIME) GROUP BY sjh
  </select>
  
  <!-- 时空分析，分析出每一个人的在他指定时间段内的第一条数据的指定半径内的次数，如果等于该段时间定位的次数，则表示没有出现大浮动位移，不等于则认为是大浮动位移 -->
    <select id="getHistoryInfosbylnglat" resultMap="historyInfoMap">
  	select  <include refid="historyInfoColumns"></include>,COUNT(sjh) AS phoneCount
  	<if test="needOfficeName == 'true'">
  		,o.name as officeName
  	</if>
  	from mo_history_info h
  	<if test="needOfficeName == 'true'">
  		left join sys_office o on h.JZJGBM = o.code and o.deleted = 1
  	</if>
  	where h.DELETED = '1'
  	<if test="name!=null and name!=''">
			 and (h.NAME like concat('%',#{name},'%') or h.SJH = #{name}) 			
    </if>
  	<if test="idCard != null and idCard != ''">
  		and h.id_card = #{idCard}
  	</if>
  	<if test="startTime != null">
  		and h.POSTTIME <![CDATA[>=]]> #{startTime}
  	</if>
  	<if test="endTime != null">
  		and h.POSTTIME <![CDATA[<=]]> #{endTime}
  	</if>
  	<if test="state!=null and state!=''">
  		and h.STATE = #{state}
  	</if>
  	<if test="isHandle!=null">
  		and h.IS_HANDLE = #{isHandle}
  	</if>
  		<if test="varyLat!=null and varyLat!='' and varyLon!=null and varyLon!='' and buffer!=null and buffer!=''">
  		and h.VARYLON+h.VARYLAT in (select h.VARYLON+h.VARYLAT from mo_history_info where sqrt(  
		    (  
		     ((#{varyLon}-h.VARYLON)*PI()*12656*COS(((#{varyLat}+h.VARYLAT)/2)*PI()/180)/180)  
		     *  
		     ((#{varyLon}-h.VARYLON)*PI()*12656*COS(((#{varyLat}+h.VARYLAT)/2)*PI()/180)/180)  
		    )  
		    +  
		    (  
		     ((#{varyLat}-h.VARYLAT)*PI()*12656/180)  
		     *  
		     ((#{varyLat}-h.VARYLAT)*PI()*12656/180)  
		    )  
		)<![CDATA[<]]>#{buffer})
  	</if>
  	 GROUP BY sjh
  </select>
  
  
  
  <select id="getHistoryInfoById" resultMap="historyInfoMap">
  	select <include refid="historyInfoColumns"></include>
  	from mo_history_info h
  	where h.id = #{id}
  	and h.DELETED = '1'
  </select>
  <insert id="addHistoryInfo" >
    insert into mo_history_info (
    	<include refid="historyInfoColumns2"></include>
    )
    values (#{id,jdbcType=VARCHAR},#{idCard}, #{sjh,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{xmlInfo,jdbcType=VARCHAR}, 
      #{posttime,jdbcType=TIMESTAMP}, #{username,jdbcType=VARCHAR}, #{isget,jdbcType=BIT}, 
      #{qybs,jdbcType=VARCHAR}, #{deviceno,jdbcType=VARCHAR}, #{speed,jdbcType=VARCHAR}, 
      #{direct,jdbcType=VARCHAR}, #{postarea,jdbcType=VARCHAR}, #{istemp,jdbcType=BIT}, 
      #{deleted,jdbcType=INTEGER}, #{varylon,jdbcType=VARCHAR}, #{varylat,jdbcType=VARCHAR}, 
      #{jzjgbm,jdbcType=VARCHAR}, #{dwtype,jdbcType=VARCHAR}, #{point,jdbcType=BINARY},
      #{geom,jdbcType=BINARY},#{isHandle},#{remarks},#{officeId})
  </insert>
  <update id="updateHistoryInfo" >
    update mo_history_info
    set SJH = #{sjh,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR},
      XML_INFO = #{xmlInfo,jdbcType=VARCHAR},
      POSTTIME = #{posttime,jdbcType=TIMESTAMP},
      USERNAME = #{username,jdbcType=VARCHAR},
      ISGET = #{isget,jdbcType=BIT},
      QYBS = #{qybs,jdbcType=VARCHAR},
      DEVICENO = #{deviceno,jdbcType=VARCHAR},
      SPEED = #{speed,jdbcType=VARCHAR},
      DIRECT = #{direct,jdbcType=VARCHAR},
      POSTAREA = #{postarea,jdbcType=VARCHAR},
      ISTEMP = #{istemp,jdbcType=BIT},
      DELETED = #{deleted,jdbcType=INTEGER},
      VARYLON = #{varylon,jdbcType=VARCHAR},
      VARYLAT = #{varylat,jdbcType=VARCHAR},
      JZJGBM = #{jzjgbm,jdbcType=VARCHAR},
      DWTYPE = #{dwtype,jdbcType=VARCHAR},
      POINT = #{point,jdbcType=BINARY},
      GEOM = #{geom,jdbcType=BINARY},
      IS_HANDLE=#{isHandle},
      REMARKS=#{remarks},
      office_id=#{officeId}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>